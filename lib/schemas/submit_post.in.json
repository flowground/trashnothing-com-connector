{
    "type": "object",
    "properties": {
        "requestBody": {
            "type": "object",
            "properties": {
                "group_ids": {
                    "description": "A comma separated list of group IDs to submit the post to (if any).",
                    "type": "string"
                },
                "type": {
                    "description": "The type of post.  One of: offer, wanted\n",
                    "type": "string"
                },
                "title": {
                    "description": "A short description of the item(s).",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 30
                },
                "location": {
                    "description": "A short location description.",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 30
                },
                "content": {
                    "description": "A longer description of the item(s).",
                    "type": "string"
                },
                "fair_offer": {
                    "description": "If set to 1, the post will be posted with the Fair Offer Policy (only valid for offer posts - see https://trashnothing.com/fair_offer_policy ).",
                    "type": "integer"
                },
                "latitude": {
                    "description": "The latitude corresponding to the location description provided. <br /><br /> If latitude and longitude are not provided, an attempt will be made to automatically geocode the location.  If the location is unable to be geocoded, the post will be rejected* and will have to be resubmitted with a latitude and longitude corresponding to the location or resubmitted with a different location that can be automatically geocoded. <br /><br /> NOTE: The latitude and longitude should NOT be the users' exact location because we don't want to publicize their exact location unless their location description is their full address (which is not recommended). <br /><br /> *When a post is rejected because it can't be geocoded, the returned error will have its identifier property set to 'unknown-location'.\n",
                    "type": "number"
                },
                "longitude": {
                    "description": "The longitude corresponding to the location description provided. (see the NOTE in latitude description)",
                    "type": "number"
                },
                "upload_key": {
                    "description": "The upload_key used to upload any photos that should be attached to this post.",
                    "type": "string"
                },
                "session": {
                    "description": "A JSON string representing a temporary object that is used to store data about the submission process for a single post.  The first time a post is submitted, session should be a new empty object (eg. '{}').  The session object should be persisted by the client until that post is successfully submitted and then it can be discarded so that the next post will start over with a new empty session object.  Every time a post is submitted and the response indicates that the submission was not successful, the session object returned in the response should override the clients copy of the session.\n",
                    "type": "string"
                },
                "preferences": {
                    "description": "A JSON string representing a permanent object that the client persists and modifies based on warnings returned by the post submission process and user input.  Some warnings returned after submitting a post have a preference_key string property so that users can opt out of those warnings in the future.  To save this opt-out preference, set the property indicated by the preference_key in the preferences object (eg. preferences[preference_key] = 1).  The preferences object is only read by submit_post and never modified - it is up to the client to initialize, modify and persist the preferences object.\n",
                    "type": "string"
                }
            }
        }
    }
}